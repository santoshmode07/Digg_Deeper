/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        // unordered_map<ListNode*,int>mp;
        // ListNode *temp=head;
        // while(temp){
        //     if(mp.find(temp)==mp.end()){
        //         mp[temp]++;
        //     }
        //     else{
        //         return true;
        //     }
        //     temp=temp->next;
        // }
        // return false;
        ListNode *slow=head,*fast=head;
        while(fast&&fast->next){
            fast=fast->next->next;
            slow=slow->next;
            if(slow==fast){
                return true;
            }
        }
        return false;
    }
};