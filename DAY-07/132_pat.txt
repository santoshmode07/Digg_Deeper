int n = nums.size();
    stack<int> st;  // stack to track potential nums[k]
    int second = INT_MIN;  // nums[k] in 132 pattern

    for (int i = n - 1; i >= 0; i--) {
        if (nums[i] < second) return true;  // nums[i] is nums[i] in 132
        while (!st.empty() && nums[i] > st.top()) {
            second = st.top();  // this is nums[k]
            st.pop();
        }
        st.push(nums[i]);  // this might be a future nums[j]
    }

    return false;