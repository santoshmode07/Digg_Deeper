/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* collisionp(ListNode *head1, ListNode *head2,int diff){
        ListNode*temp2=head2;
        for(int i=0;i<diff;i++){
            temp2=temp2->next;
        }
        ListNode*temp1=head1;
        while(temp1&&temp2){
            if(temp1==temp2){
                return temp1;
            }
            temp1=temp1->next;
            temp2=temp2->next;
        }
        return NULL;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int count1=0,count2=0;
        ListNode *temp1=headA,*temp2=headB;
        while(temp1){
            count1++;
            temp1=temp1->next;
        }
        while(temp2){
            count2++;
            temp2=temp2->next;
        }
        int diff=-1;
        if(count1<count2){
            return collisionp(headA,headB,count2-count1);
        }
        else{
            return collisionp(headB,headA,count1-count2);
        }
        return NULL;
    }
};